import type { Nil } from "@arcgis/components-utils";
import type { ArcGISMapView, ArcGISSceneView } from "../components/types";
export type ArcgisReferenceElement = HTMLArcgisMapElement | HTMLArcgisSceneElement;
export interface BaseComponentElement extends Partial<HTMLElement> {
    childElem: HTMLDivElement;
    referenceElement?: ArcgisReferenceElement | string;
    view?: ArcGISMapView | ArcGISSceneView | Nil;
    position?: string;
}
export interface WidgetElement extends BaseComponentElement {
    el: HTMLDivElement;
    widget: any;
    _watchHandles: __esri.WatchHandle[];
}
/**
 * A type that represents either wrapped widget or a native map component. Used
 * in places where both need to be accepted.
 */
export type WidgetOrMapComponent = Pick<WidgetElement, "position" | "referenceElement" | "view"> & {
    el: HTMLElement | WidgetElement["el"];
    icon?: Nil | string;
    widget?: WidgetElement["widget"];
    childElem?: HTMLElement | WidgetElement["childElem"];
};
export interface ViewElement extends Partial<HTMLElement> {
    el: HTMLDivElement;
    _hostElement?: HTMLArcgisMapElement | HTMLArcgisSceneElement;
    basemap?: __esri.Basemap | string;
    itemId?: string;
    view?: ArcGISMapView | ArcGISSceneView;
    _watchHandles: __esri.WatchHandle[];
}
export declare function addHandles(element: ViewElement | WidgetElement, handle: __esri.WatchHandle | __esri.WatchHandle[]): void;
export declare function checkForView(element: WidgetOrMapComponent): void;
export declare function isNullOrEmptyString(value: string | null | undefined): boolean;
export declare function isValidInteger(value: number | null | undefined): boolean;
export declare function isNotSameCamera(camera: __esri.Camera, camera2: __esri.Camera): boolean;
export declare function isNotSameEnvironment(environment: __esri.Environment, environment2: __esri.Environment): boolean;
export declare function isNotSameViewpoint(viewpoint: __esri.Viewpoint, viewpoint2: __esri.Viewpoint): boolean;
export declare function updateForView(viewStr: string): Promise<__esri.MapView | __esri.SceneView>;
export declare function referenceElementHelper(element: WidgetOrMapComponent, refElement: ArcgisReferenceElement | string | undefined): Promise<void>;
