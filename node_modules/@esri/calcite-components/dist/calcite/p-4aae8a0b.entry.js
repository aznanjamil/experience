/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.8.5
 */
import{a as t,r as i,h as s,H as n,g as e}from"./p-f954c593.js";import{g as a,t as c}from"./p-76cd8126.js";import{c as o}from"./p-937e5ba3.js";import"./p-00bfa320.js";import"./p-13a67f7e.js";const l={icon:"icon",flipRtl:"flip-rtl"};const r={};const h={};const p={s:16,m:24,l:32};async function f({icon:i,scale:s}){const n=p[s];const e=d(i);const a=e.charAt(e.length-1)==="F";const c=a?e.substring(0,e.length-1):e;const o=`${c}${n}${a?"F":""}`;if(r[o]){return r[o]}if(!h[o]){h[o]=fetch(t(`./assets/icon/${o}.json`)).then((t=>t.json())).catch((()=>{console.error(`"${o}" is not a valid calcite-ui-icon name`);return""}))}const l=await h[o];r[o]=l;return l}function d(t){const i=!isNaN(Number(t.charAt(0)));const s=t.split("-");const n=s.length>0;if(n){const i=/[a-z]/i;t=s.map(((t,s)=>t.replace(i,(function t(i,n){const e=s===0&&n===0;if(e){return i}return i.toUpperCase()})))).join("")}return i?`i${t}`:t}const u=":host{display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}";const m=u;const b=class{constructor(t){i(this,t);this.icon=null;this.flipRtl=false;this.scale="m";this.textLabel=undefined;this.pathData=undefined;this.visible=false}connectedCallback(){this.waitUntilVisible((()=>{this.visible=true;this.loadIconPathData()}))}disconnectedCallback(){this.intersectionObserver?.disconnect();this.intersectionObserver=null}async componentWillLoad(){this.loadIconPathData()}render(){const{el:t,flipRtl:i,pathData:e,scale:o,textLabel:r}=this;const h=a(t);const f=p[o];const d=!!r;const u=[].concat(e||"");return s(n,{key:"5eb4d26c41c6df7a4fe28e6647a452d4a91106a2","aria-hidden":c(!d),"aria-label":d?r:null,role:d?"img":null},s("svg",{key:"cd87fba0ba564d4a16ca5f18176d99b1f974b8fa","aria-hidden":"true",class:{[l.flipRtl]:h==="rtl"&&i,svg:true},fill:"currentColor",height:"100%",viewBox:`0 0 ${f} ${f}`,width:"100%",xmlns:"http://www.w3.org/2000/svg"},u.map((t=>typeof t==="string"?s("path",{d:t}):s("path",{d:t.d,opacity:"opacity"in t?t.opacity:1})))))}async loadIconPathData(){const{icon:t,scale:i,visible:s}=this;if(!t||!s){return}const n=await f({icon:t,scale:i});if(t!==this.icon){return}this.pathData=n}waitUntilVisible(t){this.intersectionObserver=o("intersection",(i=>{i.forEach((i=>{if(i.isIntersecting){this.intersectionObserver.disconnect();this.intersectionObserver=null;t()}}))}),{rootMargin:"50px"});if(!this.intersectionObserver){t();return}this.intersectionObserver.observe(this.el)}static get assetsDirs(){return["assets"]}get el(){return e(this)}static get watchers(){return{icon:["loadIconPathData"],scale:["loadIconPathData"]}}};b.style=m;export{b as calcite_icon};
//# sourceMappingURL=p-4aae8a0b.entry.js.map