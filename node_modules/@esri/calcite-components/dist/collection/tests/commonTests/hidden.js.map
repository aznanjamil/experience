{"version":3,"file":"hidden.js","sourceRoot":"","sources":["../../../../src/tests/commonTests/hidden.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAGxC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAElC;;;;;;;;;;;;GAYG;AACH,MAAM,CAAC,KAAK,UAAU,MAAM,CAAC,kBAAsC;IACjE,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;QACzB,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,aAAa,CAAC,kBAAkB,CAAC,CAAC;QAC9D,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAErC,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACnC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,MAAM,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { toHaveNoViolations } from \"jest-axe\";\nimport { getTagAndPage } from \"./utils\";\nimport { ComponentTestSetup } from \"./interfaces\";\n\nexpect.extend(toHaveNoViolations);\n\n/**\n * Helper for asserting that a component is not visible when hidden\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * @param componentTestSetup\n * describe(\"honors hidden attribute\", () => {\n *    hidden(\"calcite-accordion\")\n * });\n *\n * @param {string} componentTagOrHTML - the component tag or HTML markup to test against\n */\nexport async function hidden(componentTestSetup: ComponentTestSetup): Promise<void> {\n  it(\"is hidden\", async () => {\n    const { page, tag } = await getTagAndPage(componentTestSetup);\n    const element = await page.find(tag);\n\n    element.setAttribute(\"hidden\", \"\");\n    await page.waitForChanges();\n\n    expect(await element.isVisible()).toBe(false);\n  });\n}\n"]}