{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/tests/commonTests/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAW,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,yBAAyB,CAAC;AASjD,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAElC,MAAM,CAAC,MAAM,aAAa,GAAG,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;AAEvD,MAAM,UAAU,MAAM,CAAC,SAAiB;IACtC,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAC1C,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,SAAiB;IACtC,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;QACtB,MAAM,eAAe,GAAG,sBAAsB,CAAC;QAC/C,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;QACpC,MAAM,qBAAqB,GAAG,UAAU,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAChE,IAAI,qBAAqB,EAAE,CAAC;YAC1B,OAAO,qBAAqB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAiB,CAAC;QAC/D,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,oCAAoC,UAAU,EAAE,CAAC,CAAC;IACpE,CAAC;IAED,OAAO,SAAyB,CAAC;AACnC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,kBAA6B;IACjE,MAAM,YAAY,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;IAChD,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC;QAC5B,IAAI,EAAE,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,YAAY,MAAM,YAAY,GAAG;QAC7F,kBAAkB,EAAE,IAAI;KACzB,CAAC,CAAC;IACH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,kBAAsC;IACxE,IAAI,OAAO,kBAAkB,KAAK,UAAU,EAAE,CAAC;QAC7C,kBAAkB,GAAG,MAAM,kBAAkB,EAAE,CAAC;IAClD,CAAC;IAED,IAAI,OAAO,kBAAkB,KAAK,QAAQ,EAAE,CAAC;QAC3C,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC,kBAAkB,CAAC,CAAC;QACvD,MAAM,GAAG,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAEvC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,OAAO,kBAAkB,CAAC;AAC5B,CAAC;AAED,MAAM,UAAU,6BAA6B,CAAC,kBAA0D;IAItG,IAAI,OAAO,kBAAkB,KAAK,QAAQ,EAAE,CAAC;QAC3C,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;IAC3C,CAAC;IAED,OAAO;QACL,SAAS,EAAE,kBAAkB,CAAC,SAAS;QACvC,aAAa,EAAE,kBAAkB,CAAC,aAAa;KAChD,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,IAAY;IACrC,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;AACnE,CAAC","sourcesContent":["import { E2EPage, newE2EPage } from \"@stencil/core/testing\";\nimport { toHaveNoViolations } from \"jest-axe\";\nimport { config } from \"../../../stencil.config\";\nimport type {\n  ComponentTag,\n  TagOrHTML,\n  ComponentTestSetup,\n  TagAndPage,\n  TagOrHTMLWithBeforeContent,\n  BeforeContent,\n} from \"./interfaces\";\nexpect.extend(toHaveNoViolations);\n\nexport const HYDRATED_ATTR = config.hydratedFlag?.name;\n\nexport function isHTML(tagOrHTML: string): boolean {\n  return tagOrHTML.trim().startsWith(\"<\");\n}\n\nexport function getTag(tagOrHTML: string): ComponentTag {\n  if (isHTML(tagOrHTML)) {\n    const calciteTagRegex = /<calcite-[a-z0-9-]+/i;\n    const trimmedTag = tagOrHTML.trim();\n    const calciteTagMatchResult = trimmedTag.match(calciteTagRegex);\n    if (calciteTagMatchResult) {\n      return calciteTagMatchResult[0].substring(1) as ComponentTag;\n    }\n    throw new Error(`Could not extract tag from HTML: ${trimmedTag}`);\n  }\n\n  return tagOrHTML as ComponentTag;\n}\n\nexport async function simplePageSetup(componentTagOrHTML: TagOrHTML): Promise<E2EPage> {\n  const componentTag = getTag(componentTagOrHTML);\n  const page = await newE2EPage({\n    html: isHTML(componentTagOrHTML) ? componentTagOrHTML : `<${componentTag}></${componentTag}>`,\n    failOnConsoleError: true,\n  });\n  await page.waitForChanges();\n\n  return page;\n}\n\nexport async function getTagAndPage(componentTestSetup: ComponentTestSetup): Promise<TagAndPage> {\n  if (typeof componentTestSetup === \"function\") {\n    componentTestSetup = await componentTestSetup();\n  }\n\n  if (typeof componentTestSetup === \"string\") {\n    const page = await simplePageSetup(componentTestSetup);\n    const tag = getTag(componentTestSetup);\n\n    return { page, tag };\n  }\n\n  return componentTestSetup;\n}\n\nexport function getTagOrHTMLWithBeforeContent(componentTestSetup: TagOrHTML | TagOrHTMLWithBeforeContent): {\n  tagOrHTML: TagOrHTML;\n  beforeContent?: BeforeContent;\n} {\n  if (typeof componentTestSetup === \"string\") {\n    return { tagOrHTML: componentTestSetup };\n  }\n\n  return {\n    tagOrHTML: componentTestSetup.tagOrHTML,\n    beforeContent: componentTestSetup.beforeContent,\n  };\n}\n\nexport function propToAttr(name: string): string {\n  return name.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n"]}