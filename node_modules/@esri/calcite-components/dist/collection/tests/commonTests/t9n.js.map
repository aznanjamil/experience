{"version":3,"file":"t9n.js","sourceRoot":"","sources":["../../../../src/tests/commonTests/t9n.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EElement, E2EPage } from \"@stencil/core/testing\";\nimport { toHaveNoViolations } from \"jest-axe\";\nimport { MessageBundle } from \"../../utils/t9n\";\nimport { IntrinsicElementsWithProp } from \"./../utils\";\nimport { getTagAndPage } from \"./utils\";\nimport { ComponentTestSetup } from \"./interfaces\";\n\nexpect.extend(toHaveNoViolations);\n\n/**\n * Helper to test t9n component setup.\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"translation support\", () => {\n *   t9n(\"calcite-action\");\n * });\n *\n * @param {ComponentTestSetup} componentTestSetup - A component tag, html, or the tag and e2e page for setting up a test.\n */\n\nexport async function t9n(componentTestSetup: ComponentTestSetup): Promise<void> {\n  let component: E2EElement;\n  let page: E2EPage;\n  let getCurrentMessages: () => Promise<MessageBundle>;\n\n  beforeEach(async () => {\n    const { page: e2ePage, tag } = await getTagAndPage(componentTestSetup);\n    page = e2ePage;\n\n    type CalciteComponentsWithMessages = IntrinsicElementsWithProp<\"messages\"> & HTMLElement;\n\n    component = await page.find(tag);\n    getCurrentMessages = async (): Promise<MessageBundle> => {\n      return page.$eval(tag, (component: CalciteComponentsWithMessages) => component.messages);\n    };\n  });\n\n  it(\"has defined default messages\", async () => await assertDefaultMessages());\n  it(\"overrides messages\", async () => await assertOverrides());\n  it(\"switches messages\", async () => await assertLangSwitch());\n\n  async function assertDefaultMessages(): Promise<void> {\n    expect(await getCurrentMessages()).toBeDefined();\n  }\n\n  async function assertOverrides(): Promise<void> {\n    const messages = await getCurrentMessages();\n    const firstMessageProp = Object.keys(messages)[0];\n    const messageOverride = { [firstMessageProp]: \"override test\" };\n\n    component.setProperty(\"messageOverrides\", messageOverride);\n    await page.waitForChanges();\n\n    expect(await getCurrentMessages()).toEqual({\n      ...messages,\n      ...messageOverride,\n    });\n\n    // reset test changes\n    component.setProperty(\"messageOverrides\", undefined);\n    await page.waitForChanges();\n  }\n\n  async function assertLangSwitch(): Promise<void> {\n    const enMessages = await getCurrentMessages();\n    const fakeBundleIdentifier = \"__fake__\";\n    await page.evaluate(\n      (enMessages, fakeBundleIdentifier) => {\n        const orig = window.fetch;\n        window.fetch = async function (input, init) {\n          if (typeof input === \"string\" && input.endsWith(\"messages_es.json\")) {\n            const fakeEsMessages = {\n              ...enMessages, // reuse real message bundle in case component rendering depends on strings\n\n              [fakeBundleIdentifier]: true, // we inject a fake identifier for assertion-purposes\n            };\n            window.fetch = orig;\n            return new Response(new Blob([JSON.stringify(fakeEsMessages, null, 2)], { type: \"application/json\" }));\n          }\n\n          return orig.call(input, init);\n        };\n      },\n      enMessages,\n      fakeBundleIdentifier,\n    );\n\n    component.setAttribute(\"lang\", \"es\");\n    await page.waitForChanges();\n    await page.waitForTimeout(3000);\n    const esMessages = await getCurrentMessages();\n\n    expect(esMessages).toHaveProperty(fakeBundleIdentifier);\n\n    // reset test changes\n    component.removeAttribute(\"lang\");\n    await page.waitForChanges();\n  }\n}\n"]}