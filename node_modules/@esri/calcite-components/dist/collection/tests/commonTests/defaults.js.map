{"version":3,"file":"defaults.js","sourceRoot":"","sources":["../../../../src/tests/commonTests/defaults.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAGxC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAElC;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AACH,MAAM,UAAU,QAAQ,CACtB,kBAAsC,EACtC,WAGG;IAEH,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC,CACxF,IAAI,EACJ,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,EAAE;QACnC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,aAAa,CAAC,kBAAkB,CAAC,CAAC;QAC9D,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC,CACF,CAAC;AACJ,CAAC","sourcesContent":["import { toHaveNoViolations } from \"jest-axe\";\nimport { getTagAndPage } from \"./utils\";\nimport { ComponentTestSetup } from \"./interfaces\";\n\nexpect.extend(toHaveNoViolations);\n\n/**\n * Helper for asserting that a property's value is its default\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"defaults\", () => {\n *    defaults(\"calcite-action\", [\n *      {\n *        propertyName: \"active\",\n *        defaultValue: false\n *      },\n *      {\n *        propertyName: \"appearance\",\n *        defaultValue: \"solid\"\n *      }\n *    ])\n * })\n *\n * @param {string} componentTagOrHTML - the component tag or HTML markup to test against\n * @param componentTestSetup\n * @param {object[]} propsToTest - the properties to test\n * @param {string} propsToTest.propertyName - the property name\n * @param {any} propsToTest.value - the property value\n */\nexport function defaults(\n  componentTestSetup: ComponentTestSetup,\n  propsToTest: {\n    propertyName: string;\n    defaultValue: any;\n  }[],\n): void {\n  it.each(propsToTest.map(({ propertyName, defaultValue }) => [propertyName, defaultValue]))(\n    \"%p\",\n    async (propertyName, defaultValue) => {\n      const { page, tag } = await getTagAndPage(componentTestSetup);\n      const element = await page.find(tag);\n      const prop = await element.getProperty(propertyName);\n      expect(prop).toEqual(defaultValue);\n    },\n  );\n}\n"]}