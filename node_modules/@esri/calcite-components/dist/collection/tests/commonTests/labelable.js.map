{"version":3,"file":"labelable.js","sourceRoot":"","sources":["../../../../src/tests/commonTests/labelable.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EPage, newE2EPage } from \"@stencil/core/testing\";\nimport { toHaveNoViolations } from \"jest-axe\";\nimport { html } from \"../../../support/formatting\";\nimport { isElementFocused } from \"./../utils\";\nimport { isHTML, getTag, getTagOrHTMLWithBeforeContent } from \"./utils\";\nexport { TagOrHTMLWithBeforeContent } from \"./interfaces\";\nimport { FocusableOptions } from \"./focusable\";\nimport { TagOrHTMLWithBeforeContent, TagOrHTML } from \"./interfaces\";\n\nexpect.extend(toHaveNoViolations);\n\nexport async function assertLabelable({\n  page,\n  componentTag,\n  propertyToToggle,\n  focusTargetSelector = componentTag,\n  shadowFocusTargetSelector,\n}: {\n  page: E2EPage;\n  componentTag: string;\n  propertyToToggle?: string;\n  focusTargetSelector?: string;\n  shadowFocusTargetSelector?: string;\n}): Promise<void> {\n  let initialPropertyValue: boolean;\n  const component = await page.find(componentTag);\n\n  if (propertyToToggle) {\n    initialPropertyValue = await component.getProperty(propertyToToggle);\n  }\n\n  const label = await page.find(\"calcite-label\");\n  await label.callMethod(\"click\"); // we call the method to avoid clicking the child element\n  await page.waitForChanges();\n\n  expect(\n    await page.evaluate(\n      (focusTargetSelector: string): boolean => !!document.activeElement?.closest(focusTargetSelector),\n      focusTargetSelector,\n    ),\n  ).toBe(true);\n\n  if (shadowFocusTargetSelector) {\n    expect(\n      await page.$eval(\n        componentTag,\n        (element: HTMLElement, selector: string) => element.shadowRoot.activeElement.matches(selector),\n        shadowFocusTargetSelector,\n      ),\n    ).toBe(true);\n  }\n\n  if (propertyToToggle) {\n    const toggledPropertyValue = !initialPropertyValue;\n    expect(await component.getProperty(propertyToToggle)).toBe(toggledPropertyValue);\n\n    // assert that direct clicks on component toggle property correctly\n    component.setProperty(propertyToToggle, initialPropertyValue); // we reset as not all components toggle when clicked\n    await page.waitForChanges();\n    await component.click();\n    await page.waitForChanges();\n    expect(await component.getProperty(propertyToToggle)).toBe(toggledPropertyValue);\n  }\n\n  // assert clicking on labelable keeps focus\n  await component.callMethod(\"click\");\n  await page.waitForChanges();\n\n  expect(await isElementFocused(page, focusTargetSelector)).toBe(true);\n}\n\nexport interface LabelableOptions extends Pick<FocusableOptions, \"focusTargetSelector\" | \"shadowFocusTargetSelector\"> {\n  /**\n   * If clicking on a label toggles the labelable component, use this prop to specify the name of the toggled prop.\n   */\n  propertyToToggle?: string;\n}\n\n/**\n * Helper for asserting label clicking functionality works.\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"labelable\", () => {\n *    async () => labelable(\"calcite-button\")\n * })\n *\n * @param {string} componentTagOrHtml - The component tag or HTML used to test label support.\n * @param {LabelableOptions} [options] - Labelable options.\n */\nexport function labelable(\n  componentTagOrHtml: TagOrHTML | TagOrHTMLWithBeforeContent,\n  options?: LabelableOptions,\n): void {\n  const id = \"labelable-id\";\n  const labelTitle = \"My Component\";\n  const propertyToToggle = options?.propertyToToggle;\n  const focusTargetSelector = options?.focusTargetSelector || `#${id}`;\n  const shadowFocusTargetSelector = options?.shadowFocusTargetSelector;\n  const { beforeContent, tagOrHTML } = getTagOrHTMLWithBeforeContent(componentTagOrHtml);\n  const componentTag = getTag(tagOrHTML);\n  const componentHtml = isHTML(tagOrHTML) ? ensureId(tagOrHTML) : `<${componentTag} id=\"${id}\"></${componentTag}>`;\n\n  function ensureId(html: string): string {\n    return html.includes(\"id=\") ? html : html.replace(componentTag, `${componentTag} id=\"${id}\" `);\n  }\n\n  describe(\"label wraps labelables\", () => {\n    it(\"is labelable when component is wrapped in a label\", async () => {\n      const wrappedHtml = html`<calcite-label>${labelTitle} ${componentHtml}</calcite-label>`;\n      const wrappedPage: E2EPage = await newE2EPage();\n      beforeContent?.(wrappedPage);\n      await wrappedPage.setContent(wrappedHtml);\n      await wrappedPage.waitForChanges();\n\n      await assertLabelable({\n        page: wrappedPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"is labelable when wrapping label is set prior to component\", async () => {\n      const labelFirstWrappedPage: E2EPage = await newE2EPage();\n      beforeContent?.(labelFirstWrappedPage);\n      await labelFirstWrappedPage.setContent(html`\n        <calcite-label></calcite-label>\n        <template>${componentHtml}</template>\n      `);\n      await labelFirstWrappedPage.waitForChanges();\n      await labelFirstWrappedPage.evaluate(() => {\n        const template = document.querySelector(\"template\");\n        const labelEl = document.querySelector(\"calcite-label\");\n\n        labelEl.append(template.content.cloneNode(true));\n      }, componentHtml);\n      await labelFirstWrappedPage.waitForChanges();\n\n      await assertLabelable({\n        page: labelFirstWrappedPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"is labelable when a component is set first before being wrapped in a label\", async () => {\n      const componentFirstWrappedPage: E2EPage = await newE2EPage();\n      beforeContent?.(componentFirstWrappedPage);\n      await componentFirstWrappedPage.setContent(componentHtml);\n      await componentFirstWrappedPage.waitForChanges();\n      await componentFirstWrappedPage.evaluate((id: string) => {\n        const componentEl = document.querySelector(`[id='${id}']`);\n        const labelEl = document.createElement(\"calcite-label\");\n        document.body.append(labelEl);\n        labelEl.append(componentEl);\n      }, id);\n      await componentFirstWrappedPage.waitForChanges();\n\n      await assertLabelable({\n        page: componentFirstWrappedPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"only sets focus on the first labelable when label is clicked\", async () => {\n      const firstLabelableId = `${id}`;\n      const componentFirstWrappedPage: E2EPage = await newE2EPage();\n      beforeContent?.(componentFirstWrappedPage);\n      const content = html`\n        <calcite-label>\n          <!-- duplicate tags should be fine as assertion uses first match -->\n          ${componentHtml.replace(id, firstLabelableId)} ${componentHtml.replace(id, `${id}-2`)}\n          ${componentHtml.replace(id, `${id}-3`)}\n        </calcite-label>\n      `;\n\n      await componentFirstWrappedPage.setContent(content);\n      await componentFirstWrappedPage.waitForChanges();\n\n      const firstLabelableSelector = `#${firstLabelableId}`;\n\n      await assertLabelable({\n        page: componentFirstWrappedPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector:\n          focusTargetSelector === firstLabelableSelector\n            ? firstLabelableSelector\n            : `${firstLabelableSelector} ${focusTargetSelector}`,\n      });\n    });\n  });\n\n  describe(\"label is sibling to labelables\", () => {\n    it(\"is labelable with label set as a sibling to the component\", async () => {\n      const siblingHtml = html`\n        <calcite-label for=\"${id}\">${labelTitle}</calcite-label>\n        ${componentHtml}\n      `;\n      const siblingPage: E2EPage = await newE2EPage();\n      beforeContent?.(siblingPage);\n\n      await siblingPage.setContent(siblingHtml);\n      await siblingPage.waitForChanges();\n\n      await assertLabelable({\n        page: siblingPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"is labelable when sibling label is set prior to component\", async () => {\n      const labelFirstSiblingPage: E2EPage = await newE2EPage();\n      beforeContent?.(labelFirstSiblingPage);\n      await labelFirstSiblingPage.setContent(html`\n        <calcite-label for=\"${id}\"></calcite-label>\n        <template>${componentHtml}</template>\n      `);\n      await labelFirstSiblingPage.waitForChanges();\n      await labelFirstSiblingPage.evaluate(() => {\n        const template = document.querySelector(\"template\");\n        document.body.append(template.content.cloneNode(true));\n      }, componentHtml);\n      await labelFirstSiblingPage.waitForChanges();\n\n      await assertLabelable({\n        page: labelFirstSiblingPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"is labelable for a component set before sibling label\", async () => {\n      const componentFirstSiblingPage: E2EPage = await newE2EPage();\n      beforeContent?.(componentFirstSiblingPage);\n      await componentFirstSiblingPage.setContent(componentHtml);\n      await componentFirstSiblingPage.waitForChanges();\n      await componentFirstSiblingPage.evaluate((id: string) => {\n        const label = document.createElement(\"calcite-label\");\n        label.setAttribute(\"for\", `${id}`);\n        document.body.append(label);\n      }, id);\n      await componentFirstSiblingPage.waitForChanges();\n\n      await assertLabelable({\n        page: componentFirstSiblingPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n\n    it(\"is labelable when label's for is set after initialization\", async () => {\n      const siblingHtml = html`\n        <calcite-label>${labelTitle}</calcite-label>\n        ${componentHtml}\n      `;\n      const siblingPage: E2EPage = await newE2EPage();\n      beforeContent?.(siblingPage);\n\n      await siblingPage.setContent(siblingHtml);\n      await siblingPage.waitForChanges();\n\n      const label = await siblingPage.find(\"calcite-label\");\n      label.setProperty(\"for\", id);\n      await siblingPage.waitForChanges();\n\n      await assertLabelable({\n        page: siblingPage,\n        componentTag,\n        propertyToToggle,\n        focusTargetSelector,\n        shadowFocusTargetSelector,\n      });\n    });\n  });\n}\n"]}