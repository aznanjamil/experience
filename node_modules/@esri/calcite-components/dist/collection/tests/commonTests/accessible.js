/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.8.5
 */
import { toHaveNoViolations } from "jest-axe";
import { getTagAndPage } from "./utils";
expect.extend(toHaveNoViolations);
/**
 * Helper for asserting that a component is accessible.
 *
 * Note that this helper should be used within a describe block.
 *
 * @example
 * describe("accessible"), () => {
 *    accessible(`<calcite-tree></calcite-tree>`);
 * });
 *
 * @param {ComponentTestSetup} componentTestSetup - A component tag, html, or the tag and e2e page for setting up a test
 */
export function accessible(componentTestSetup) {
    it("is accessible", async () => {
        const { page, tag } = await getTagAndPage(componentTestSetup);
        await page.addScriptTag({ path: require.resolve("axe-core") });
        await page.waitForFunction(() => window.axe);
        expect(await page.evaluate(async (componentTag) => window.axe.run(componentTag), tag)).toHaveNoViolations();
    });
}
//# sourceMappingURL=accessible.js.map
