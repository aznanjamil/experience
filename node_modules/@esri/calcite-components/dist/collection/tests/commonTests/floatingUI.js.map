{"version":3,"file":"floatingUI.js","sourceRoot":"","sources":["../../../../src/tests/commonTests/floatingUI.ts"],"names":[],"mappings":"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","sourcesContent":["import { toHaveNoViolations } from \"jest-axe\";\nimport { getTag, simplePageSetup } from \"./utils\";\nimport { ComponentTag, TagOrHTML } from \"./interfaces\";\nexpect.extend(toHaveNoViolations);\n\n/**\n * This helper will test if a floating-ui-owning component has configured the floating-ui correctly.\n * At the moment, this only tests if the scroll event listeners are only active when the floating-ui is displayed.\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"owns a floating-ui\", () => {\n *  floatingUIOwner(\n *    `<calcite-input-date-picker></calcite-input-date-picker>`,\n *      \"open\",\n *      { shadowSelector: \".menu-container\" }\n *  )\n * });\n *\n * @param {TagOrHTML} componentTagOrHTML - The component tag or HTML markup to test against.\n * @param {string} togglePropName - The component property that toggles the floating-ui.\n * @param [options] - additional options for asserting focus\n * @param {string} [options.shadowSelector] - The selector in the shadow DOM for the floating-ui element.\n */\nexport function floatingUIOwner(\n  componentTagOrHTML: TagOrHTML,\n  togglePropName: string,\n  options?: {\n    /**\n     * Use this to specify the selector in the shadow DOM for the floating-ui element.\n     */\n    shadowSelector?: string;\n  },\n): void {\n  it(\"owns a floating-ui\", async () => {\n    const page = await simplePageSetup(componentTagOrHTML);\n\n    const scrollablePageSizeInPx = 2400;\n    await page.addStyleTag({\n      content: `body {\n      height: ${scrollablePageSizeInPx}px;\n      width: ${scrollablePageSizeInPx}px;\n    }`,\n    });\n    await page.waitForChanges();\n\n    const tag = getTag(componentTagOrHTML);\n    const component = await page.find(tag);\n\n    async function getTransform(): Promise<string> {\n      // need to get the style attribute from the browser context since the E2E element returns null\n      return page.$eval(\n        tag,\n        (component: HTMLElement, shadowSelector: string): string => {\n          const floatingUIEl = shadowSelector\n            ? component.shadowRoot.querySelector<HTMLElement>(shadowSelector)\n            : component;\n\n          return floatingUIEl.getAttribute(\"style\");\n        },\n        options?.shadowSelector,\n      );\n    }\n\n    async function scrollTo(x: number, y: number): Promise<void> {\n      await page.evaluate((x: number, y: number) => document.firstElementChild.scrollTo(x, y), x, y);\n    }\n\n    component.setProperty(togglePropName, false);\n    await page.waitForChanges();\n\n    const initialClosedTransform = await getTransform();\n\n    await scrollTo(scrollablePageSizeInPx, scrollablePageSizeInPx);\n    await page.waitForChanges();\n\n    expect(await getTransform()).toBe(initialClosedTransform);\n\n    await scrollTo(0, 0);\n    await page.waitForChanges();\n\n    expect(await getTransform()).toBe(initialClosedTransform);\n\n    component.setProperty(togglePropName, true);\n    await page.waitForChanges();\n\n    const initialOpenTransform = await getTransform();\n\n    await scrollTo(scrollablePageSizeInPx, scrollablePageSizeInPx);\n    await page.waitForChanges();\n\n    expect(await getTransform()).not.toBe(initialOpenTransform);\n\n    await scrollTo(0, 0);\n    await page.waitForChanges();\n\n    expect(await getTransform()).toBe(initialOpenTransform);\n  });\n}\n\n/**\n * Helper to test if a component has a floating-UI-owning component wired up.\n *\n * Note: this performs a shallow test and assumes the underlying component has floating-ui properly configured.\n *\n * @example\n * describe(\"delegates to floating-ui-owner component\", () => {\n *   delegatesToFloatingUiOwningComponent(\"calcite-pad\", \"calcite-action-group\");\n * });\n *\n * @param componentTagOrHTML\n * @param floatingUiOwnerComponentTag\n */\nexport async function delegatesToFloatingUiOwningComponent(\n  componentTagOrHTML: TagOrHTML,\n  floatingUiOwnerComponentTag: ComponentTag,\n): Promise<void> {\n  it(\"delegates to floating-ui owning component\", async () => {\n    const page = await simplePageSetup(componentTagOrHTML);\n    const tag = getTag(componentTagOrHTML);\n\n    // we assume if `overlay-positioning` is used by an internal component that it is a floating-ui component\n\n    const floatingUiOwningComponent = await page.find(`${tag} >>> ${floatingUiOwnerComponentTag}`);\n    expect(await floatingUiOwningComponent.getProperty(\"overlayPositioning\")).toBe(\"absolute\");\n\n    const component = await page.find(tag);\n    await component.setProperty(\"overlayPositioning\", \"fixed\");\n    await page.waitForChanges();\n\n    expect(await floatingUiOwningComponent.getProperty(\"overlayPositioning\")).toBe(\"fixed\");\n  });\n}\n"]}