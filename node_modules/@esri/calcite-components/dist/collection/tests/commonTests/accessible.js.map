{"version":3,"file":"accessible.js","sourceRoot":"","sources":["../../../../src/tests/commonTests/accessible.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAE9C,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAGxC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAIlC;;;;;;;;;;;GAWG;AACH,MAAM,UAAU,UAAU,CAAC,kBAAsC;IAC/D,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;QAC7B,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,aAAa,CAAC,kBAAkB,CAAC,CAAC;QAE9D,MAAM,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC/D,MAAM,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAE,MAA0B,CAAC,GAAG,CAAC,CAAC;QAElE,MAAM,CACJ,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,YAA0B,EAAE,EAAE,CAAE,MAA0B,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,GAAG,CAAC,CAClH,CAAC,kBAAkB,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import axe from \"axe-core\";\nimport { toHaveNoViolations } from \"jest-axe\";\nimport { GlobalTestProps } from \"./../utils\";\nimport { getTagAndPage } from \"./utils\";\nimport { ComponentTestSetup, ComponentTag } from \"./interfaces\";\n\nexpect.extend(toHaveNoViolations);\n\ntype AxeOwningWindow = GlobalTestProps<{ axe: typeof axe }>;\n\n/**\n * Helper for asserting that a component is accessible.\n *\n * Note that this helper should be used within a describe block.\n *\n * @example\n * describe(\"accessible\"), () => {\n *    accessible(`<calcite-tree></calcite-tree>`);\n * });\n *\n * @param {ComponentTestSetup} componentTestSetup - A component tag, html, or the tag and e2e page for setting up a test\n */\nexport function accessible(componentTestSetup: ComponentTestSetup): void {\n  it(\"is accessible\", async () => {\n    const { page, tag } = await getTagAndPage(componentTestSetup);\n\n    await page.addScriptTag({ path: require.resolve(\"axe-core\") });\n    await page.waitForFunction(() => (window as AxeOwningWindow).axe);\n\n    expect(\n      await page.evaluate(async (componentTag: ComponentTag) => (window as AxeOwningWindow).axe.run(componentTag), tag),\n    ).toHaveNoViolations();\n  });\n}\n"]}